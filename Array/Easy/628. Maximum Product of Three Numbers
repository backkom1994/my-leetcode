// first method:sorting and compare two possible maximum
class Solution {
public:
    int maximumProduct(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        int m=nums.size();
        return(max(nums[0]*nums[1]*nums[m-1],nums[m-2]*nums[m-3]*nums[m-1]));
    }
};

// second method: pick out the largest three values and the smallest two values without sorting the whole sequence
class Solution {
public:
    int maximumProduct(vector<int>& nums) {
        int max1=INT_MIN;
        int max2=INT_MIN;
        int max3=INT_MIN;
        int min1=INT_MAX;
        int min2=INT_MAX;
        for(int i=0;i<nums.size();i++){
            if(nums[i]>max1){max3=max2;max2=max1;max1=nums[i];}
            else if(nums[i]>max2){max3=max2;max2=nums[i];}
            else if(nums[i]>max3){max3=nums[i];}
            if(nums[i]<min1){min2=min1;min1=nums[i];}
            else if(nums[i]<min2){min2=nums[i];}
        }
        return(max(max1*max2*max3,max1*min1*min2));
    }
};
